// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Project {
  id           String        @id @default(uuid())
  name         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  ownerId      String
  // owner        User          @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  description  String
  meetLocation String
  meetType     String
  posts        Post[]
  memberships  Memberships[]
}

model User {
  id String @id @default(uuid())
  // memberships Memberships[]
  // projects    Project[]
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId])
}

model Memberships {
  id          String           @id @default(uuid())
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  projectId   String
  project     Project          @relation(fields: [projectId], references: [id], onDelete: Cascade)
  userId      String
  ownerId     String
  // user      User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  status      MembershipStatus @default(PENDING)
  // User      User             @relation(fields: [userId], references: [id])
  // User      User             @relation(fields: [userId], references: [id])
  description String?

  @@unique([projectId, userId])
  @@index([projectId])
}

enum MembershipStatus {
  ACCEPTED
  PENDING
  REJECTED
}
